// THIS IS A GENERATED SOURCE. MODIFICATION WILL BE OVERWRITTEN.
// USING JSON FROM:
//   PENGUINLIONG/tinyspv @ db18ea116bd8c195ee18714eb9dffab473dfa7da
#pragma once
#include "tinyspv/spirv/unified1/opcls.hpp"
namespace tinyspv {
bool is_ty(Op op) {
  switch (op) {
  case OpTypeVoid:
  case OpTypeBool:
  case OpTypeInt:
  case OpTypeFloat:
  case OpTypeVector:
  case OpTypeMatrix:
  case OpTypeImage:
  case OpTypeSampler:
  case OpTypeSampledImage:
  case OpTypeArray:
  case OpTypeRuntimeArray:
  case OpTypeStruct:
  case OpTypeOpaque:
  case OpTypePointer:
  case OpTypeFunction:
  case OpTypeEvent:
  case OpTypeDeviceEvent:
  case OpTypeReserveId:
  case OpTypeQueue:
  case OpTypePipe:
  case OpTypeForwardPointer:
  case OpTypePipeStorage:
  case OpTypeNamedBarrier:
  case OpTypeRayQueryKHR:
  case OpTypeAccelerationStructureNV:
  case OpTypeCooperativeMatrixNV:
    return true;
  default: return false;
  }
}
bool is_expr_op(Op op) {
  switch (op) {
  case OpUndef:
  case OpSizeOf:
  case OpString:
  case OpDecorationGroup:
  case OpExtInstImport:
  case OpExtInst:
  case OpConstantTrue:
  case OpConstantFalse:
  case OpConstant:
  case OpConstantComposite:
  case OpConstantSampler:
  case OpConstantNull:
  case OpSpecConstantTrue:
  case OpSpecConstantFalse:
  case OpSpecConstant:
  case OpSpecConstantComposite:
  case OpSpecConstantOp:
  case OpVariable:
  case OpImageTexelPointer:
  case OpLoad:
  case OpAccessChain:
  case OpInBoundsAccessChain:
  case OpPtrAccessChain:
  case OpArrayLength:
  case OpGenericPtrMemSemantics:
  case OpInBoundsPtrAccessChain:
  case OpPtrEqual:
  case OpPtrNotEqual:
  case OpPtrDiff:
  case OpFunction:
  case OpFunctionParameter:
  case OpFunctionCall:
  case OpSampledImage:
  case OpImageSampleImplicitLod:
  case OpImageSampleExplicitLod:
  case OpImageSampleDrefImplicitLod:
  case OpImageSampleDrefExplicitLod:
  case OpImageSampleProjImplicitLod:
  case OpImageSampleProjExplicitLod:
  case OpImageSampleProjDrefImplicitLod:
  case OpImageSampleProjDrefExplicitLod:
  case OpImageFetch:
  case OpImageGather:
  case OpImageDrefGather:
  case OpImageRead:
  case OpImage:
  case OpImageQueryFormat:
  case OpImageQueryOrder:
  case OpImageQuerySizeLod:
  case OpImageQuerySize:
  case OpImageQueryLod:
  case OpImageQueryLevels:
  case OpImageQuerySamples:
  case OpImageSparseSampleImplicitLod:
  case OpImageSparseSampleExplicitLod:
  case OpImageSparseSampleDrefImplicitLod:
  case OpImageSparseSampleDrefExplicitLod:
  case OpImageSparseSampleProjImplicitLod:
  case OpImageSparseSampleProjExplicitLod:
  case OpImageSparseSampleProjDrefImplicitLod:
  case OpImageSparseSampleProjDrefExplicitLod:
  case OpImageSparseFetch:
  case OpImageSparseGather:
  case OpImageSparseDrefGather:
  case OpImageSparseTexelsResident:
  case OpImageSparseRead:
  case OpImageSampleFootprintNV:
  case OpConvertFToU:
  case OpConvertFToS:
  case OpConvertSToF:
  case OpConvertUToF:
  case OpUConvert:
  case OpSConvert:
  case OpFConvert:
  case OpQuantizeToF16:
  case OpConvertPtrToU:
  case OpSatConvertSToU:
  case OpSatConvertUToS:
  case OpConvertUToPtr:
  case OpPtrCastToGeneric:
  case OpGenericCastToPtr:
  case OpGenericCastToPtrExplicit:
  case OpBitcast:
  case OpVectorExtractDynamic:
  case OpVectorInsertDynamic:
  case OpVectorShuffle:
  case OpCompositeConstruct:
  case OpCompositeExtract:
  case OpCompositeInsert:
  case OpCopyObject:
  case OpTranspose:
  case OpCopyLogical:
  case OpSNegate:
  case OpFNegate:
  case OpIAdd:
  case OpFAdd:
  case OpISub:
  case OpFSub:
  case OpIMul:
  case OpFMul:
  case OpUDiv:
  case OpSDiv:
  case OpFDiv:
  case OpUMod:
  case OpSRem:
  case OpSMod:
  case OpFRem:
  case OpFMod:
  case OpVectorTimesScalar:
  case OpMatrixTimesScalar:
  case OpVectorTimesMatrix:
  case OpMatrixTimesVector:
  case OpMatrixTimesMatrix:
  case OpOuterProduct:
  case OpDot:
  case OpIAddCarry:
  case OpISubBorrow:
  case OpUMulExtended:
  case OpSMulExtended:
  case OpShiftRightLogical:
  case OpShiftRightArithmetic:
  case OpShiftLeftLogical:
  case OpBitwiseOr:
  case OpBitwiseXor:
  case OpBitwiseAnd:
  case OpNot:
  case OpBitFieldInsert:
  case OpBitFieldSExtract:
  case OpBitFieldUExtract:
  case OpBitReverse:
  case OpBitCount:
  case OpAny:
  case OpAll:
  case OpIsNan:
  case OpIsInf:
  case OpIsFinite:
  case OpIsNormal:
  case OpSignBitSet:
  case OpLessOrGreater:
  case OpOrdered:
  case OpUnordered:
  case OpLogicalEqual:
  case OpLogicalNotEqual:
  case OpLogicalOr:
  case OpLogicalAnd:
  case OpLogicalNot:
  case OpSelect:
  case OpIEqual:
  case OpINotEqual:
  case OpUGreaterThan:
  case OpSGreaterThan:
  case OpUGreaterThanEqual:
  case OpSGreaterThanEqual:
  case OpULessThan:
  case OpSLessThan:
  case OpULessThanEqual:
  case OpSLessThanEqual:
  case OpFOrdEqual:
  case OpFUnordEqual:
  case OpFOrdNotEqual:
  case OpFUnordNotEqual:
  case OpFOrdLessThan:
  case OpFUnordLessThan:
  case OpFOrdGreaterThan:
  case OpFUnordGreaterThan:
  case OpFOrdLessThanEqual:
  case OpFUnordLessThanEqual:
  case OpFOrdGreaterThanEqual:
  case OpFUnordGreaterThanEqual:
  case OpDPdx:
  case OpDPdy:
  case OpFwidth:
  case OpDPdxFine:
  case OpDPdyFine:
  case OpFwidthFine:
  case OpDPdxCoarse:
  case OpDPdyCoarse:
  case OpFwidthCoarse:
  case OpPhi:
  case OpLabel:
  case OpAtomicLoad:
  case OpAtomicExchange:
  case OpAtomicCompareExchange:
  case OpAtomicCompareExchangeWeak:
  case OpAtomicIIncrement:
  case OpAtomicIDecrement:
  case OpAtomicIAdd:
  case OpAtomicISub:
  case OpAtomicSMin:
  case OpAtomicUMin:
  case OpAtomicSMax:
  case OpAtomicUMax:
  case OpAtomicAnd:
  case OpAtomicOr:
  case OpAtomicXor:
  case OpAtomicFlagTestAndSet:
  case OpAtomicFAddEXT:
  case OpNamedBarrierInitialize:
  case OpGroupAsyncCopy:
  case OpGroupAll:
  case OpGroupAny:
  case OpGroupBroadcast:
  case OpGroupIAdd:
  case OpGroupFAdd:
  case OpGroupFMin:
  case OpGroupUMin:
  case OpGroupSMin:
  case OpGroupFMax:
  case OpGroupUMax:
  case OpGroupSMax:
  case OpSubgroupBallotKHR:
  case OpSubgroupFirstInvocationKHR:
  case OpSubgroupAllKHR:
  case OpSubgroupAnyKHR:
  case OpSubgroupAllEqualKHR:
  case OpSubgroupReadInvocationKHR:
  case OpGroupIAddNonUniformAMD:
  case OpGroupFAddNonUniformAMD:
  case OpGroupFMinNonUniformAMD:
  case OpGroupUMinNonUniformAMD:
  case OpGroupSMinNonUniformAMD:
  case OpGroupFMaxNonUniformAMD:
  case OpGroupUMaxNonUniformAMD:
  case OpGroupSMaxNonUniformAMD:
  case OpSubgroupShuffleINTEL:
  case OpSubgroupShuffleDownINTEL:
  case OpSubgroupShuffleUpINTEL:
  case OpSubgroupShuffleXorINTEL:
  case OpSubgroupBlockReadINTEL:
  case OpSubgroupImageBlockReadINTEL:
  case OpSubgroupImageMediaBlockReadINTEL:
  case OpEnqueueMarker:
  case OpEnqueueKernel:
  case OpGetKernelNDrangeSubGroupCount:
  case OpGetKernelNDrangeMaxSubGroupSize:
  case OpGetKernelWorkGroupSize:
  case OpGetKernelPreferredWorkGroupSizeMultiple:
  case OpCreateUserEvent:
  case OpIsValidEvent:
  case OpGetDefaultQueue:
  case OpBuildNDRange:
  case OpGetKernelLocalSizeForSubgroupCount:
  case OpGetKernelMaxNumSubgroups:
  case OpReadPipe:
  case OpWritePipe:
  case OpReservedReadPipe:
  case OpReservedWritePipe:
  case OpReserveReadPipePackets:
  case OpReserveWritePipePackets:
  case OpIsValidReserveId:
  case OpGetNumPipePackets:
  case OpGetMaxPipePackets:
  case OpGroupReserveReadPipePackets:
  case OpGroupReserveWritePipePackets:
  case OpConstantPipeStorage:
  case OpCreatePipeFromPipeStorage:
  case OpReadPipeBlockingINTEL:
  case OpWritePipeBlockingINTEL:
  case OpGroupNonUniformElect:
  case OpGroupNonUniformAll:
  case OpGroupNonUniformAny:
  case OpGroupNonUniformAllEqual:
  case OpGroupNonUniformBroadcast:
  case OpGroupNonUniformBroadcastFirst:
  case OpGroupNonUniformBallot:
  case OpGroupNonUniformInverseBallot:
  case OpGroupNonUniformBallotBitExtract:
  case OpGroupNonUniformBallotBitCount:
  case OpGroupNonUniformBallotFindLSB:
  case OpGroupNonUniformBallotFindMSB:
  case OpGroupNonUniformShuffle:
  case OpGroupNonUniformShuffleXor:
  case OpGroupNonUniformShuffleUp:
  case OpGroupNonUniformShuffleDown:
  case OpGroupNonUniformIAdd:
  case OpGroupNonUniformFAdd:
  case OpGroupNonUniformIMul:
  case OpGroupNonUniformFMul:
  case OpGroupNonUniformSMin:
  case OpGroupNonUniformUMin:
  case OpGroupNonUniformFMin:
  case OpGroupNonUniformSMax:
  case OpGroupNonUniformUMax:
  case OpGroupNonUniformFMax:
  case OpGroupNonUniformBitwiseAnd:
  case OpGroupNonUniformBitwiseOr:
  case OpGroupNonUniformBitwiseXor:
  case OpGroupNonUniformLogicalAnd:
  case OpGroupNonUniformLogicalOr:
  case OpGroupNonUniformLogicalXor:
  case OpGroupNonUniformQuadBroadcast:
  case OpGroupNonUniformQuadSwap:
  case OpGroupNonUniformPartitionNV:
  case OpConvertUToAccelerationStructureKHR:
  case OpRayQueryProceedKHR:
  case OpRayQueryGetIntersectionTypeKHR:
  case OpFragmentMaskFetchAMD:
  case OpFragmentFetchAMD:
  case OpReadClockKHR:
  case OpReportIntersectionNV:
  case OpCooperativeMatrixLoadNV:
  case OpCooperativeMatrixMulAddNV:
  case OpCooperativeMatrixLengthNV:
  case OpIsHelperInvocationEXT:
  case OpUCountLeadingZerosINTEL:
  case OpUCountTrailingZerosINTEL:
  case OpAbsISubINTEL:
  case OpAbsUSubINTEL:
  case OpIAddSatINTEL:
  case OpUAddSatINTEL:
  case OpIAverageINTEL:
  case OpUAverageINTEL:
  case OpIAverageRoundedINTEL:
  case OpUAverageRoundedINTEL:
  case OpISubSatINTEL:
  case OpUSubSatINTEL:
  case OpIMul32x16INTEL:
  case OpUMul32x16INTEL:
  case OpFPGARegINTEL:
  case OpRayQueryGetRayTMinKHR:
  case OpRayQueryGetRayFlagsKHR:
  case OpRayQueryGetIntersectionTKHR:
  case OpRayQueryGetIntersectionInstanceCustomIndexKHR:
  case OpRayQueryGetIntersectionInstanceIdKHR:
  case OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR:
  case OpRayQueryGetIntersectionGeometryIndexKHR:
  case OpRayQueryGetIntersectionPrimitiveIndexKHR:
  case OpRayQueryGetIntersectionBarycentricsKHR:
  case OpRayQueryGetIntersectionFrontFaceKHR:
  case OpRayQueryGetIntersectionCandidateAABBOpaqueKHR:
  case OpRayQueryGetIntersectionObjectRayDirectionKHR:
  case OpRayQueryGetIntersectionObjectRayOriginKHR:
  case OpRayQueryGetWorldRayDirectionKHR:
  case OpRayQueryGetWorldRayOriginKHR:
  case OpRayQueryGetIntersectionObjectToWorldKHR:
  case OpRayQueryGetIntersectionWorldToObjectKHR:
    return true;
  default: return false;
  }
}
bool is_stmt_op(Op op) {
  switch (op) {
  case OpNop:
  case OpSourceContinued:
  case OpSource:
  case OpSourceExtension:
  case OpName:
  case OpMemberName:
  case OpLine:
  case OpNoLine:
  case OpModuleProcessed:
  case OpDecorate:
  case OpMemberDecorate:
  case OpGroupDecorate:
  case OpGroupMemberDecorate:
  case OpDecorateId:
  case OpDecorateString:
  case OpMemberDecorateString:
  case OpExtension:
  case OpMemoryModel:
  case OpEntryPoint:
  case OpExecutionMode:
  case OpCapability:
  case OpExecutionModeId:
  case OpStore:
  case OpCopyMemory:
  case OpCopyMemorySized:
  case OpFunctionEnd:
  case OpImageWrite:
  case OpLoopMerge:
  case OpSelectionMerge:
  case OpBranch:
  case OpBranchConditional:
  case OpSwitch:
  case OpKill:
  case OpReturn:
  case OpReturnValue:
  case OpUnreachable:
  case OpLifetimeStart:
  case OpLifetimeStop:
  case OpTerminateInvocation:
  case OpAtomicStore:
  case OpAtomicFlagClear:
  case OpEmitVertex:
  case OpEndPrimitive:
  case OpEmitStreamVertex:
  case OpEndStreamPrimitive:
  case OpControlBarrier:
  case OpMemoryBarrier:
  case OpMemoryNamedBarrier:
  case OpGroupWaitEvents:
  case OpSubgroupBlockWriteINTEL:
  case OpSubgroupImageBlockWriteINTEL:
  case OpSubgroupImageMediaBlockWriteINTEL:
  case OpRetainEvent:
  case OpReleaseEvent:
  case OpSetUserEventStatus:
  case OpCaptureEventProfilingInfo:
  case OpCommitReadPipe:
  case OpCommitWritePipe:
  case OpGroupCommitReadPipe:
  case OpGroupCommitWritePipe:
  case OpTraceRayKHR:
  case OpExecuteCallableKHR:
  case OpIgnoreIntersectionKHR:
  case OpTerminateRayKHR:
  case OpRayQueryInitializeKHR:
  case OpRayQueryTerminateKHR:
  case OpRayQueryGenerateIntersectionKHR:
  case OpRayQueryConfirmIntersectionKHR:
  case OpWritePackedPrimitiveIndices4x8NV:
  case OpIgnoreIntersectionNV:
  case OpTerminateRayNV:
  case OpTraceNV:
  case OpExecuteCallableNV:
  case OpCooperativeMatrixStoreNV:
  case OpBeginInvocationInterlockEXT:
  case OpEndInvocationInterlockEXT:
  case OpDemoteToHelperInvocationEXT:
  case OpLoopControlINTEL:
    return true;
  default: return false;
  }
}
} // namespace tinyspv
